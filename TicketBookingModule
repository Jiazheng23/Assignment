#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#pragma warning (disable:4996)

typedef struct {
	char bookingID[10], memberID[6], trainID[6], bookingDate[11], departDate[11],
		departStation[40], arriveStation[40], paymentType, ticketStatus;
	int coachNo, seatNo, quantity;
	float paymentAmt;
}TrainTicket;

//bookingID memberID trainID bookingDate departDate seatNo coachNo quantity paymentType paymentAmt ticketStatus
//departStation arriveStation

void bookingMain();
void bookTicketHeading();
void bookTicketMemberID(char id[6]);
void bookTicketBookDate(int *d, int *m, int *y);
void bookTicket();
void checkTicketStatus();
void editBooking();
void cancelBooking();
void displayBookedTickets();
void report();

void main() {
	char bookingID[6], memberID[6], trainID[6], bookingDate[11], departDate[11],
		paymentType, ticketStatus;
	int coachNo, seatNo, quantity, day, month, year, hour, minute, departStation, arriveStation;
	float paymentAmt;
	int choice = 0, counter = 0, login = 1;
	//'login' is an identifier to determine if the customer has logged in as a member or not
	//'login' = 0 means havent log in, 1 means logged in
	//ONLY 1ST FUNCTION/MODULE IS AVAILABLE FOR NOW
	bookingMain();
	rewind(stdin);
	scanf("%d", &choice);

	while (choice < 0 || choice > 7) { //loop if invalid choice entered
		bookingMain();
		printf("\nInvalid choice, please enter again.\n");
		rewind(stdin);
		scanf("%d", &choice);
	}
	if (choice == 0) {
		system("cls");
		printf("Thank you for using our system!\n");
		exit(0);
	}
	else {

		switch (choice) {
		case 1:
			if (login == 1) {
				counter = 0;
				do {
					counter++;
					system("cls");
					bookTicketHeading();
					if (counter > 1) {
						printf("Invalid member format, please enter again\n");
					}
					bookTicketMemberID(memberID);
				} while (memberID[0] != 'M' || isdigit(memberID[1]) == 0 || isdigit(memberID[2]) == 0
					|| isdigit(memberID[3]) == 0 || isdigit(memberID[4]) == 0 || strlen(memberID) > 5);

				//printf("\n%s", memberID);
				counter = 0;
				do {
					counter++;
					system("cls");
					bookTicketHeading();
					if (counter > 1) {
						printf("Invalid date format, please enter again\n");
					}
					bookTicketBookDate(&day, &month, &year);
				} while (day < 1 || day > 31 || month < 1 || month > 12 || year < 2024);
				//printf("\n%d-%d-%d", day, month, year);
			}
			break;
		case 2:
			if (login == 1) {
				checkTicketStatus();

			};
			break;
		case 3:
			if (login == 1) {
				editBooking();

			};
			break;
		case 4:
			if (login == 1) {
				cancelBooking();

			};
			break;
		case 5:
			if (login == 1) {
				displayBookedTickets();

			};
			break;
		case 6:
			if (login == 1) {
				report();

			};
			break;
		}
	}

}

void bookingMain() {
	system("cls");
	printf("Thank you for using XXX train!              \n");
	printf("--------------------------------------------\n");
	printf("|              Ticket Booking              |\n");
	printf("============================================\n");
	printf("[1] Book ticket                             \n");
	printf("[2] Check ticket status                     \n");
	printf("[3] Edit booking                            \n");
	printf("[4] Cancel booking                          \n");
	printf("[5] Display booked tickets (staff only)     \n");
	printf("[6] Report (staff only)                     \n");
	printf("[7] Return to main menu                     \n\n");
	printf("Press 0 to exit program                     \n");
	printf("Select your option (1-7): ");
};

void bookTicketHeading() {
	printf("--------------------------------------------\n");
	printf("|                Book tickets              |\n");
	printf("============================================\n");
}

void bookTicketMemberID(char id[6]) {
	printf("Insert member ID (M****): ");
	rewind(stdin);
	scanf("%[^\n]", id);
}

void bookTicketBookDate(int *d, int *m, int *y) {
	printf("Insert booking date (DD-MM-YYYY):\n");
	rewind(stdin);
	scanf("%d-%d-%d", d, m, y);
}

void bookTicket() {
	system("cls");
	//declarations
	TrainTicket ticket[50];

	char bookingID[6], memberID[6], trainID[6], bookingDate[11], departDate[11],
		 paymentType, ticketStatus;
	int coachNo, seatNo, quantity, day, month, year, hour, minute, departStation, arriveStation;
	float paymentAmt;

	/*open file
	FILE* bookTicket;
	bookTicket = fopen("BookedTickets.txt", "a");
	
	//if no file found, exit program
	if (bookTicket == NULL) {
		printf("No file found. Please create file.");
		exit(-1);
	}
	*/
	//insert departure time
	system("cls");
	printf("--------------------------------------------\n");
	printf("|                Book tickets              |\n");
	printf("============================================\n");
	printf("Insert time with 24-hour time format(HH:MM):\n");
	rewind(stdin);
	scanf("%d:%d", &hour, &minute);
	while (hour < 0 || hour > 24 || minute < 0 || minute >= 61) {
		system("cls");
		printf("--------------------------------------------\n");
		printf("|                Book tickets              |\n");
		printf("============================================\n");
		printf("Invalid time format, please enter again.\n");
		printf("Insert time with 24-hour time format(HH:MM):\n");
		rewind(stdin);
		scanf("%d:%d", &hour, &minute);
	}
	//insert departing station
	system("cls");
	printf("--------------------------------------------\n");
	printf("|                Book tickets              |\n");
	printf("============================================\n");
	printf("[ 1]Alor Setar         [ 9]KL Sentral       \n");
	printf("[ 2]Sungai Petani      [10]Kajang           \n");
	printf("[ 3]Butterworth        [11]Seremban         \n");
	printf("[ 4]Taiping            [12]Gemas            \n");
	printf("[ 5]Ipoh               [13]Segamat          \n");
	printf("[ 6]Kampar             [14]Kluang           \n");
	printf("[ 7]Rawang             [15]Kulai            \n");
	printf("[ 8]Sungai Buloh       [16]JB Sentral       \n\n");
	printf("Insert departing station (1-16): \n");
	rewind(stdin);
	scanf("%d", &departStation);
	while (departStation < 1 || departStation > 16) {
		system("cls");
		printf("--------------------------------------------\n");
		printf("|                Book tickets              |\n");
		printf("============================================\n");
		printf("[ 1]Alor Setar         [ 9]KL Sentral       \n");
		printf("[ 2]Sungai Petani      [10]Kajang           \n");
		printf("[ 3]Butterworth        [11]Seremban         \n");
		printf("[ 4]Taiping            [12]Gemas            \n");
		printf("[ 5]Ipoh               [13]Segamat          \n");
		printf("[ 6]Kampar             [14]Kluang           \n");
		printf("[ 7]Rawang             [15]Kulai            \n");
		printf("[ 8]Sungai Buloh       [16]JB Sentral       \n\n");
		printf("Invalid station number, please enter again. \n");
		printf("Insert departing station (1-16): \n");
		rewind(stdin);
		scanf("%d", &departStation);
	}

}

void checkTicketStatus() {

}

void editBooking() {

}

void cancelBooking() {

}

void displayBookedTickets() {

}

void report() {

}
