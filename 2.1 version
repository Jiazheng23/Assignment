#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#pragma warning (disable : 4996)

typedef struct {
	char name[50], password[20], passwordRecovery[50],
		gender, icNo[15], contactNo[15], memberID[6];
}Member;



//void staffMenu();
void memberMenu();
void nonMemberMenu();


void nonMemberMenu() {
	FILE* fp;
	fp = fopen("members.bin", "ab+");

	if (fp == NULL) {
		printf("Error opening file. \n");
		exit(-1);
	}

	Member newMember;
	int nameExists;

	do {
		nameExists = 0;
		
		printf("Sign up For a New Account\n");
		printf("Enter Name: ");
		rewind(stdin);
		scanf("%[^\n]", newMember.name);

		for (int i = 0; newMember.name[i]; i++) { //Convert name to uppercase
			newMember.name[i] = toupper(newMember.name[i]);
		}
		
		rewind(fp);
		Member temp;
		while (fread(&temp, sizeof(Member), 1, fp)) {
			if (strcmp(temp.name, newMember.name) == 0) {
				printf("Name already exists. Please enter another name.\n");
				nameExists = 1;
				break;
			}
		}
	} while (nameExists);

	printf("Enter Password: ");
	scanf("%s", newMember.password);

	printf("Enter Gender (M/F): ");
	scanf(" %c", &newMember.gender);
	newMember.gender = toupper(newMember.gender);
	while (newMember.gender != 'M' && newMember.gender != 'F') {
		printf("Invalid input. Please Enter M or F: ");
		scanf(" %c", &newMember.gender);
		newMember.gender = toupper(newMember.gender);
	}

	int valid;
	do {
		printf("Enter IC number (XXXXXX-XX-XXXX): ");
		scanf("%s", newMember.icNo);

		valid = 1; //Check IC No format
		if (strlen(newMember.icNo) != 14) {
			valid = 0;
		}
		else if (newMember.icNo[6] != '-' || newMember.icNo[9] != '-') {
			valid = 0;
		}
		else {
			for (int i = 0; i < 14; i++) {
				if (i != 6 && i != 9 && !isdigit(newMember.icNo[i])) {
					valid = 0;
					break;
				}
			}
		}
		if (!valid) {
			printf("Invalid IC No format. Please enter in the format XXXXXX-XX-XXXX\n");
		}
	} while (!valid);

	do {
		printf("Enter Contact Number (01X-XXXXXXX or 01X-XXXXXXXX): ");
		scanf("%s", newMember.contactNo);
		
		valid = 1;
		if (strlen(newMember.contactNo) < 10 || strlen(newMember.contactNo) > 12) {
			valid = 0;
		}
		else if (newMember.contactNo[0] != '0' || newMember.contactNo[1] != '1') {
			valid = 0;
		}
		else if (newMember.contactNo[3] != '-') {
			valid = 0;
		}
		else {
			for (int i = 0; i < strlen(newMember.contactNo); i++) {
				if (i != 3 && !isdigit(newMember.contactNo[i])) {
					valid = 0;
					break;
				}
			}
		} 
		if (!valid){
			printf("Invalid Contact No format. Please enter in the format 01X-XXXXXXX or 01X-XXXXXXXX.\n");
		}
	} while (!valid);

	//Generate Member ID
	fseek(fp, 0, SEEK_END); //Move the file pointer to EOF
	int numMembers = ftell(fp) / sizeof(Member); //Calculate No of members by dividing the current position of the file pointer by the size of each Member structure
	sprintf(newMember.memberID, "M%04d", numMembers + 1); //Generate with format "MXXX", Increment number of members by 1 to ensure a unique ID for each new member

	fwrite(&newMember, sizeof(Member), 1, fp);
	printf("Member Registered Successful.\n");
	printf("Your Member ID is: %s\n", newMember.memberID);
	printf("Please Remember Your Member ID For Future Login.\n");
	printf("Done");

	fclose(fp);
}

int loginMember(char* enteredMemberID, char* enteredPassword) {
	FILE* file = fopen("members.bin", "rb");
	if (file == NULL) {
		printf("Error opening file. \n");
		return 0;
	}

	Member temp;
	while (fread(&temp, sizeof(Member), 1, file)) {
		if (strcmp(temp.memberID, enteredMemberID) == 0 && strcmp(temp.password, enteredPassword) == 0) {
			fclose(file);
			return 1; // Login successful
		}
	}

	fclose(file);
	return 0; // Login unsuccessful
}

void login() {
	char enteredMemberID[20];
	char enteredPassword[20];
	int loginChance = 0;
	int maxLoginChances = 3;

	do {
		printf("\n=== Member Login ===\n");
		printf("Enter Member ID: ");
		scanf("%s", enteredMemberID);
		printf("Enter Password: ");
		scanf("%s", enteredPassword);

		int result = loginMember(enteredMemberID, enteredPassword);

		if (result == 1) {
			printf("Login successful!\n");
			break;
		}
		else if (loginChance < maxLoginChances - 1 ) {
			printf("Invalid Member ID or Password. Please try again.\n");
			printf("You have %d %s left.\n", maxLoginChances - loginChance - 1, maxLoginChances - loginChance == 2 ? "chance" : "chances");
		}
		else {
			printf("Invalid Member ID or Paswword.\n");
			printf("You have exceeded the maximum number of login chances.\n");
			printf("Would you like to recover your password? (Y/N): ");
			
			char recover;
			scanf(" %c", &recover);
			if (toupper(recover) == 'Y') {
				//Password recovery function
			}
			else {
				printf("Returning to main menu.\n");
				break;
			}
		}
		loginChance++;
	} while (loginChance < maxLoginChances);
}

void memberMenu() {
	int choice;
	int loggedIn;

	login();
	loggedIn = 1;

	do {
		/*if (!loggedIn) {
			printf("Please login to your account!\n");
			login();
			if (!loggedIn) {
				continue;
			}
		}*/ 

		printf("\n=== Member Menu ===\n");
		printf("1. Search\n");
		printf("2. Modify\n");
		printf("3. Delete\n");
		printf("4. Logout and Exit\n");
		printf("Enter your choice: ");
		rewind(stdin);
		scanf("%d", &choice);

		switch (choice) {
		case 1:
			printf("Search function");
			break;
		case 2:
			printf("Modify function\n");
			break;
		case 3:
			printf("Delete function\n");
			break;
		case 4:
			printf("You Have Successfully Looged Out and Exit Member Menu. Have A Nice Day ^_^\n");
			return;
		default:
			printf("Invalid choice. Please enter a number between 1 to 4.\n");
			break;
		}
	} while (choice != 4);
}


/*void memberMenu() {
	int choice;

	do {
		printf("\n=== Member Menu ===\n");
		printf("1. Login\n");
		printf("2. Exit\n");
		printf("Enter your choice: ");
		rewind(stdin);
		scanf("%d", &choice);

		switch (choice) {
		case 1:
			login();
			break;
		case 2:
			printf("Exiting Member Menu.\n");
			break;
		default:
			printf("Invalid choice. Please try again.\n");
			break;
		}
	} while (choice != 2);
}*/

void main() {
	//nonMemberMenu();
	memberMenu();
}

/*int main() {
	int choice;

	do {
		printf("========================================\n");
		printf("+ Welcome to Member Information Module +\n");
		printf("========================================\n");
		printf("\nPlease select your role:\n");
		printf("1. Staff\n");
		printf("2. Member\n");
		printf("3. Non-Member\n");
		printf("4. Exit\n");
		printf("Enter your choice: ");
		scanf("%d", &choice);

		switch (choice) {
		case 1:
			staffMenu();
			break;
		case 2:
			memberMenu();
			break;
		case 3:
			nonMemberMenu();
			break;
		case 4:
			printf("\nYou Have Successfully Exit This Module. Have A Nice Day ^_^\n");
			break;
		default :
			printf("Invalid choice. Please try agian.\n");
			break;
		}
	} while (choice != 4);

	return 0;
}*/
