#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#pragma warning (disable : 4996)



typedef struct {
	char trainType[3];
	int day, month, year, trainID, arrivalTime, availableSeat;
	char departureStt[20], ArrivalStt[20];
}SchedulingModel;

typedef struct {
	char staffId[7],staffName[20],staffIc[9],staffPass[20];
	char position[7];
}AdminstratorModel;

typedef struct {
	int memberID, Gender, iC, contactNum, bookingID;
	char memberName, memberPassword, memberPasswordRecovery;
}MemberModel;


AdminstratorModel StaffModel;

void RecoveryPass();
void displayStaffInfo();
void deleteStaffInfo();
void searchStaffInfo();

void mainMenu() {
	system("cls");
	printf("Welcome to the balalalala Train !!\n");
	printf("Select the Mode                   \n");
	printf("1.Staff Mode                      \n");
	printf("2.Member Mode                     \n");
	printf("3.Train Schedule                  \n");
	printf("4.Ticket Booking                  \n");
	printf("5.Exit                            \n");
}

void staffMode() {
	system("cls");
	printf("Staff Mode     \n");
	printf("1.login  staff \n");
	printf("2.create staff \n");
	printf("3.go back menu \n");
	printf("4.exit         \n");
}

void memberMode() {
	system("cls");
	printf("Member Mode    \n");
	printf("1.login member \n");
	printf("2.create member\n");
	printf("3.go back menu \n");
	printf("4.exit");
}

void error() {
	system("cls");
	printf("invalid input please try again             \n");
	printf("1.Go back main menu \n");
	printf("2.Exit the program \n");

}

void StaffMenu1() {
	system("cls");

	int staffOption1;
	printf("Successful Login\n");
	printf("1.Display Staff Infomation  \n");
	printf("2.Search Staff              \n");
	printf("3.Delete Staff              \n");
	printf("4.Go back menu              \n");
	printf("5.Exit                      \n");

	printf("Enter Your Option :");
	scanf("%d", &staffOption1);

	switch (staffOption1) {
		//display staff info
	case 1:displayStaffInfo();
		break;
		//search staff
	case 2:searchStaffInfo();
		break;
		//delete staff	
	case 3:deleteStaffInfo();
		break;
		//go back menu
	case 4:main();
		break;
		//exit
	case 5:exit(0);
		break;
		//error
	default:error();
	}
}

void StaffMenu() {
	int option3;
	printf("1.Edit Schedule   \n");
	printf("2.Display Booking \n");
	printf("3.Report		  \n");
	printf("4.Go to back menu \n");
	printf("5.Exit            \n");

	printf("Enter your option :\n");
	scanf("%d", &option3);

	switch (option3) {
		//Edit Schedule Function
	case 1: break;
		//Display Booking
	case 2:break;
		//Report
	case 3:break;
		//Go back menu
	case 4:main();
		break;
		//Exit
	case 5:exit(1);
		break;
		//error
	default:error();
	}
}

void loginStaff() {

	int memberOption, errorOption, found = -1,wrong = 0;
	char enter,wrongOpiton;
	char staffPass[20], staffId[20];

	printf("Enter Your Staff ID :");
	scanf("%s", staffId);
	printf("Enter Your Staff Password :");
	scanf("%s", staffPass);


	AdminstratorModel StaffModel[50];
	FILE* readStaffBinary;
	readStaffBinary = fopen("binary.bin", "rb");

	if (readStaffBinary == NULL) {
		printf("Failed to open file\n");
		return 1;
	}
	int count = 0;

	//count the staffmodel array
	while (fread(&StaffModel[count], sizeof(AdminstratorModel), 1, readStaffBinary)) {
		count++;
	}
	int totalStaff = 0;

	totalStaff = count;

	//Search StaffId
	for (int i = 0; i < totalStaff; i++) {
		if (strcmp(StaffModel[i].staffId, staffId) == 0) {
			found = i;
			if (strcmp(StaffModel[i].staffPass, staffPass) == 0) {
				StaffMenu1();
			}
			else {
				wrong++;
			}
		}
	}
	fclose(readStaffBinary);
	if (found == -1) {
		printf("Unable to login Please try again\n");
	}
	else if(wrong != 0)
	{
		printf("Please check your ID and Passwords are correct!\n");
	}
	else if (wrong >= 3) {
		printf("Do you need to recovery Password?(Y/N)");
		scanf("%c",&wrongOpiton);
		wrongOpiton = toupper(wrongOpiton);
		
		if (wrongOpiton == 'Y') {
			RecoveryPass();
		}
		else if (wrongOpiton == 'N'){
			system("cls");
			main();
		}
		else{
			error();
		}
	}
}


void deleteStaffInfo() {
	int found = -1;
	char staffPass[20], staffId[20], option1,staffName[20];
	char again,confirm;
	
	AdminstratorModel StaffModel[50];
	FILE* readStaffBinary;
	readStaffBinary = fopen("binary.bin", "rb");
	
	if (readStaffBinary == NULL) {
		printf("Failed to open file\n");
		return 1;
	}
	int count = 0;
	//count the staffmodel array
	rewind(stdin);
	while (fread(&StaffModel[count], sizeof(AdminstratorModel), 1, readStaffBinary)) {
			count++;
		}
	fclose(readStaffBinary);


	int totalStaff = 0;
		totalStaff = count;
	printf("Enter Your Staff ID :");
	scanf("%s", staffId);

	printf("===============================================================================================\n");
	printf(" Staff ID \t\t Staff Name \t\t Staff Passwords \t\t Staff Position \t\t\n");

	for (int i = 0; i < totalStaff; i++) {
		if (strcmp(StaffModel[i].staffId, staffId ) == 0) {
			found = i;
			printf(" %s\t\t\t %s\t\t\t  %s\t\t\t %s\t\t\t\n", StaffModel[i].staffId, StaffModel[i].staffName, StaffModel[i].staffPass, StaffModel[i].position);	
		}
	}
	printf("===============================================================================================\n");
	


	if (found == -1) {
		printf("Not Found the Staff Information\n");
		printf("Do you want to try again?(Y/N)\n");
		scanf("%c",&again);
		if (toupper(again) == 'Y') {
			deleteStaffInfo();
		}
		else {
			main();
		}
	}else {
		rewind(stdin);
		printf("Are you sure u want to delete this Staff Information?(Y/N)");
		scanf("%c",&confirm);

		if(toupper(confirm) == 'Y'){
			strcpy(StaffModel[found].staffName, "XXXX");
			strcpy(StaffModel[found].staffPass, "XXXX");
			strcpy(StaffModel[found].position,	"XXXX");
			printf("The Staff infomation are deleted");
		}
		else {
			printf("Nobody will be deleted");
			main();
		}
	}
	FILE* writeBinary;

	writeBinary = fopen("binary.bin", "wb");

	if (writeBinary == NULL) {
		printf("Failed to open file\n");
		return 1;
	}
	for (int i = 0; i < totalStaff; i++) {
		fwrite(&StaffModel[i], sizeof(AdminstratorModel), 1, writeBinary);
	}
	fclose(writeBinary);
}

void searchStaffInfo() {
	int found = -1;
	char staffPass[20], staffId[20],option1,again,deleted = 0,again1;
	printf("Enter Your Staff ID :");
	scanf("%s", staffId);

	AdminstratorModel StaffModel[50];
	FILE* readStaffBinary;
	readStaffBinary = fopen("binary.bin", "rb");


	if (readStaffBinary == NULL) {
		printf("Failed to open file\n");
		return 1;
	}
	int count = 0;
	//count the staffmodel array
	while (fread(&StaffModel[count], sizeof(AdminstratorModel), 1, readStaffBinary)) {
		count++;
	}

	int totalStaff = count;
	printf("===============================================================================================\n");
	printf(" Staff ID \t\t Staff Name \t\t Staff Passwords \t\t Staff Position \t\t\n");

	for (int i = 0; i < totalStaff; i++) {
			if (strcmp(StaffModel[i].staffId, staffId) == 0) {
			found = i;
				if (strcmp(StaffModel[i].staffName, "XXX") != 0) {
					printf(" %s\t\t\t %s\t\t\t  %s\t\t\t %s\t\t\t\n", StaffModel[i].staffId, StaffModel[i].staffName, StaffModel[i].staffPass, StaffModel[i].position);
				}
				else {
					printf(" %s\t\t\t %s\t\t\t  %s\t\t\t %s\t\t\t\n", StaffModel[i].staffId, StaffModel[i].staffName, StaffModel[i].staffPass, StaffModel[i].position);
					deleted++;
				}
			}
	}
	printf("===============================================================================================\n");
		if (deleted != 0) {
			printf("The Staff already deleted");
			printf("Do you want to search another Staff?(Y/N)");
			scanf("%c",&again1);
			again1 = toupper(again1);

			if (again1 == 'Y') {
				searchStaffInfo();
			}
			else if (again1 == 'N') {
				exit(-1);
			}
			else {
				error();
			}
		}	

		if (found == -1) {
			printf("Not Found the Staff Information\n");
			printf("Do you want to try again?(Y/N)\n");
			scanf("%c",&again);
			if(toupper(again) == 'Y'){
				searchStaffInfo();
			}
			else{
				main();
			}
	}
}



void displayStaffInfo() {
	FILE* readStaffBinary;
	readStaffBinary = fopen("binary.bin", "rb");

	if (readStaffBinary == NULL) {
		printf("Failed to open file\n");
		return 1;
	}
	int count = 0 , deleted = 0;
	char option;
	//read the data from file and print out
	printf("===============================================================================================\n");
	printf(" Staff ID \t\t Staff Name \t\t Staff Passwords \t\t Staff Position \t\t\n");
	while (fread(&StaffModel, sizeof(AdminstratorModel), 1, readStaffBinary)) {
		if (strcmp(StaffModel.staffName, "XXX") != 1) {
			printf(" %s\t\t\t %s\t\t\t  %s\t\t\t\t %s\t\t\t\n", StaffModel.staffId, StaffModel.staffName, StaffModel.staffPass, StaffModel.position);
		}
		else {
			deleted++;
			
		}
	}
	printf("===============================================================================================\n");

	printf("%d Staff already deleted",deleted);
	printf("Do you want go back main menu?(Y/N)");
	scanf("%c",&option);
	option = toupper(option);

	if (option == "Y") {
		system("cls");
		main();
	}
	else if (option == 'N') {
		exit(-1);
	}
	else {
		error();
	}


	fclose(readStaffBinary);
}


void RecoveryPass() {
	AdminstratorModel StaffModel[30];
	AdminstratorModel input;
	char totalStaff,found = -1,doublePass;

	rewind(stdin);
	printf("Enter Your Staff ID :");
	scanf("%[^\n]",input.staffId);

	FILE* readStaffBinary;
	readStaffBinary = fopen("binary.bin", "rb");

	if (readStaffBinary == NULL) {
		printf("Failed to open file\n");
		return 1;}
	int count = 0;
	//count how many staffmodel 
	while (fread(&StaffModel, sizeof(AdminstratorModel), 1, readStaffBinary)) {
		count++;
	}
	
	fclose(readStaffBinary);

	totalStaff = count;
	//search the data
	for (int i = 0; i < totalStaff; i++) {
		if (strcmp(StaffModel[i].staffId, input.staffId) == 0) {
			found = i;
			break;
		}
	}
	
	if (found == -1) {
		printf("Not Found");
	}
	else {
		printf("Enter Your New Passwords:");
		rewind(stdin);
		scanf("%[^\n]",&StaffModel[found].staffPass);
		printf("Double confirm your Passwords");
		scanf("%[^\n]",&doublePass);
		
		//confirm the password for the user
		if (StaffModel[found].staffPass != doublePass) {
			printf("\t\tPlease Try again");
			RecoveryPass();
		}
		else {
			printf("Successful Change Your Passwords");
			printf("Please remember your Passwords");
			main();
		}
	
	
		
		FILE * writeNewPass;

		//write the new passwords into the file
		writeNewPass = fopen("binary.bin","wb");
		for (int i = 0; i < totalStaff; i++) {
			fwrite(&StaffModel[i],sizeof(AdminstratorModel),1,writeNewPass);
		}
		

		fclose(writeNewPass);
	}
}

int countStaffNumber(int* totalStaff) {
	FILE* readBinary;


	AdminstratorModel StaffModel[100];

	readBinary = fopen("binary.bin", "rb");

	if (readBinary == NULL) {
		printf("Failed to open file\n");
		return 1;
	}
	int count = 0;
	//count the staffmodel array
	while (fread(&StaffModel[count], sizeof(AdminstratorModel), 1, readBinary)) {
		count++;
	}

	*totalStaff = count;

	fclose(readBinary);
}

int addStaffInfo() {
	system("cls");
	int valid=0;

	int staID, succOption,total;
	
	FILE* staffBinary;
	


	staffBinary = fopen("binary.bin", "ab");
	

	if (staffBinary == NULL) {
		printf("Can't Open the file Binary.dat!");
		exit(-1);
	}

	
	//Staff Input
	printf("Hi,Welcome to our Big Family!!\n");
	printf("This Is Your Staff ID :");
	countStaffNumber(&total);
	total += 1;
	printf("ST %04d",total);

	sprintf(StaffModel.staffId,"ST%04d",total);

	printf("\nEnter your Name	   :");
	rewind(stdin);
	scanf("%[^\n]", StaffModel.staffName);

	printf("\nEnter Your Password  :");
	rewind(stdin);
	scanf("%[^\n]", StaffModel.staffPass);


	printf("\nEnter Your Position (Boss/Staff):");
	rewind(stdin);
	scanf("%s", StaffModel.position);
	
	if (strcmp(StaffModel.position,"Staff") || strcmp(StaffModel.position, "Boss")) {
		fwrite(&StaffModel, sizeof(AdminstratorModel), 1, staffBinary);
		printf("\nSuccessful Create New Staff! ");

		printf("\n1.Go Back Main Menu.");
		printf("\n2.Exit ");
		scanf("%d", &succOption);

		if (succOption == 1) {
			main();
		}
		else if (succOption == 2) {
			exit(-1);
		}while (succOption != 1 || succOption != 2);
	}
	else {
		error();
	}
	fclose(staffBinary);
}

int main() {
	system("color 70");
	int menuOption, memberOption, errorOption, found = -1;
	char enter;
	char staffPass[20], staffId[20];


	mainMenu();
	scanf("%d", &menuOption);

	if (menuOption == 1) {
		staffMode();

		int staffOption;

		printf("Enter Your Option :");
		scanf("%d", &staffOption);

		switch (staffOption) {
		case 1: {//login member
			loginStaff();
			break;
		}
		case 2: { //create new staff
			addStaffInfo();
			break;
		}
		case 3:system("cls");
			main();
			break;
		case 4:exit(0);
		default:
			do {
				error();
				scanf("%d", &errorOption);
				if (errorOption == 1) {
					main();
				}
				else if (errorOption == 2) {
					exit(-1);
				}
			} while (errorOption != 1 || errorOption != 2);
		}

	}
	else if (menuOption == 2) {
		memberMode();
		printf("Enter Your Option");
		scanf("%d", &memberOption);
		switch (memberOption) {
		case 1:break;
		case 2:break;
		case 3:system("cls");
			main();
			break;
		case 4:exit(0);
		default:error();
		}
	}
	else if (menuOption == 3) {

	}
	else if (menuOption == 4) {


	}
	else if (menuOption == 5) {
		exit(0);
	}
	else {
		error();
	}
}
