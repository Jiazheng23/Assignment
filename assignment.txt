#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#pragma warning (disable : 4996)



typedef struct {
	char trainType[3];
	int day,month,year,trainID,arrivalTime,availableSeat;
	char departureStt[20],ArrivalStt[20];
}SchedulingModel;

typedef struct {
	char staffName[20], staffPass[20],staffId[20];
	char position[20];
}AdminstratorModel;

typedef struct {
	int memberID,Gender,iC,contactNum,bookingID;
	char memberName,memberPassword, memberPasswordRecovery;
}MemberModel;

//need one more ticket booking model
AdminstratorModel StaffModel;
MemberModel memberModel;


void mainMenu(){
	system("cls");
	printf("Welcome to the balalalala Train !!\n");
	printf("Select the Mode                   \n");
	printf("1.Staff Mode                      \n");
	printf("2.Member Mode                     \n");
	printf("3.Train Schedule                  \n");
	printf("4.Ticket Booking                  \n");
	printf("5.Exit                            \n");
}

void staffMode() {
	system("cls");
	printf("Staff Mode     \n");
	printf("1.login  staff \n");
	printf("2.create staff \n");
	printf("3.go back menu \n");
	printf("4.exit         \n");
}

void memberMode() {
	system("cls");
	printf("Member Mode    \n");
	printf("1.login member \n");
	printf("2.create member\n");
	printf("3.go back menu \n");
	printf("4.exit");
}

void error() {
	system("cls");
	printf("invalid input please try again             \n");
	printf("1.Go back main menu \n");
	printf("2.Exit the program \n");
	
}

void displayStaffInfo() {
	FILE* readStaffBinary;
	readStaffBinary = fopen("binary.dat", "rb");

	if (readStaffBinary == NULL) {
		printf("Failed to open file\n");
		return 1;
	}
	int count = 0;
	while (fread(&StaffModel, sizeof(AdminstratorModel), 1, readStaffBinary)) {
		printf("===============================================================================================\n");
		printf(" Staff ID \t\t Staff Name \t\t Staff Passwords \t\t Staff Position \t\t\n");
		printf(" %s\t\t\t %s\t\t\t  %s\t\t\t %s\t\t\t\n", StaffModel.staffId, StaffModel.staffName, StaffModel.staffPass, StaffModel.position);
		printf("===============================================================================================\n");
		count++;
	}
	fclose(readStaffBinary);
}

int main() {
	system("color 70");
	int menuOption,memberOption,errorOption,succOption,found = -1;
	char enter;
	char staffPass[20], staffId[20];
	
	
	mainMenu();
	scanf("%d",&menuOption);

	if (menuOption == 1) {
		staffMode();

		int staffOption;

		printf("Enter Your Option :");
		scanf("%d",&staffOption);

		switch (staffOption) {
			case 1: {//login member
					printf("Enter Your Staff ID :");
					scanf("%s",staffId);
					printf("Enter Your Staff Password :");
					scanf("%s",staffPass);
					

					AdminstratorModel StaffModel[50];
					FILE* readStaffBinary;
					readStaffBinary = fopen("binary.dat", "rb");

					
					if (readStaffBinary == NULL) {
						printf("Failed to open file\n");
						return 1;
					}
					int count = 0;
					while (fread(&StaffModel[count], sizeof(AdminstratorModel), 1, readStaffBinary)) {
						count++;
					}

					int totalStaff = count;
					for (int i = 0; i < totalStaff; i++) {
						if (strcmp(StaffModel[i].staffId,staffId ) == 0) {
							found = i;
							if (strcmp(StaffModel[i].staffPass, staffPass) == 0) {
								printf("NICE");
							}
						}
					}
					if (found == -1) {
						printf("Not Found");
					}
					
					fclose(readStaffBinary);
					break;
				
			}
			case 2:{ //create new staff
					system("cls");

					int staID;

					FILE *staffBinary;
					
						
					staffBinary = fopen("binary.dat","ab");

					if (staffBinary == NULL) {
						printf("Can't Open the file Binary.dat!");
						exit(-1);
					}
					printf("Hi,Welcome to our Big Family!!\n");
					printf("\nEnter your Staff ID:");
					rewind(stdin);
					scanf("%[^\n]",StaffModel.staffId);
				

					printf("\nEnter your Name	   :");
					rewind(stdin);
					scanf("%[^\n]", StaffModel.staffName);
					

					printf("\nEnter Your Password  :");
					rewind(stdin);
					scanf("%[^\n]",StaffModel.staffPass);
					
				
					printf("\nEnter Your Position:");
					rewind(stdin);
					scanf("%s",StaffModel.position);

					fwrite(&StaffModel,sizeof(AdminstratorModel),1,staffBinary);
					/*fwrite(&StaffModel.staffId	, sizeof(StaffModel.staffId),	1,staffBinary);
					fprintf(staffBinary, ".");
					fwrite(&StaffModel.staffName, sizeof(StaffModel.staffName), 1, staffBinary);
					fprintf(staffBinary,".");
					fwrite(&StaffModel.staffPass, sizeof(StaffModel.staffPass), 1, staffBinary);
					fprintf(staffBinary, ".");
					fwrite(&StaffModel.position , sizeof(StaffModel.position),  1, staffBinary);
					fprintf(staffBinary, ".");*/

					fclose(staffBinary);

					printf("\nSuccessful Create New Staff! ");
					
					printf("\n1.Go Back Main Menu.");
					printf("\n2.Exit ");
					scanf("%d",&succOption);
		
					if (succOption == 1) {
						main();
					}
					else if (succOption == 2) {
						exit(-1);
					}while (succOption != 1 || succOption != 2);
		
					break;
				}
			case 3:system("cls");
					main();
					break;
			case 4:exit (0);
			default:
					do {
					error();
					scanf("%d", &errorOption);
					if (errorOption == 1) {
						main();
					}
					else if (errorOption == 2) {
						exit(-1);
					}
					}while(errorOption !=1 || errorOption != 2);
				}
				
			}
		else if (menuOption == 2) {
		memberMode();
		printf("Enter Your Option");
		scanf("%d",&memberOption);
		switch (memberOption) {
			case 1:break;
			case 2:break;
			case 3:system("cls");
					main(); 
					break;
			case 4:exit(0);
			default:error();
		}
	}
	else if (menuOption == 3) {
		
	}
	else if(menuOption == 4)  {
		

	}
	else if (menuOption == 5) {
		exit(0);
	}
	else {
		error();
	}
}
